{"version":3,"sources":["testLogo.png","config.js","hash.js","getScreenSize.js","helper.js","GenreComponent.jsx","HoverComponent.jsx","ComputerTop.jsx","Canvas.jsx","useMousePosition.jsx","KeyCanvas.jsx","DisplayGraph.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","getScreenSize","_useState","useState","winWidth","innerWidth","winHeight","innerHeight","_useState2","Object","slicedToArray","windowDimension","detectHW","detectSize","useEffect","addEventListener","removeEventListener","transformCoordinates","x","y","axisLength","imgSize","GenreComponent","_ref","genres","react_default","a","createElement","className","map","genre","key","HoverComponent","imageSize","popularity","valence","songInfo","smallFormat","isMobile","setHovered","bounds","danceability","lowX","highX","lowY","highY","findBounds","currElem","topHeight","setTopHeight","elem","document","getElementById","clientHeight","style","height","name","track","artists","artistString","i","length","display","overflow","src","alt","songsFirstHalf","songsSecondHalf","count","song","push","id","determineElement","ComputerTop","hoveredSong","songs","color","marginLeft","listStyleType","MemorizedCanvas","React","memo","xOffset","draw","width","screenSize","position","setPosition","setFromEvent","e","stopPropagation","touches","clientX","clientY","useMousePosition","canvas","useRef","xRect","yRect","rect","current","getBoundingClientRect","context","getContext","devicePixelRatio","scale","beginPath","grd","createLinearGradient","addColorStop","strokeStyle","lineWidth","moveTo","lineTo","stroke","fillStyle","arc","Math","PI","fill","hovered","ref","MouseTooltip","visible","offsetX","offsetY","KeyCanvas","lineStartX","lineEndX","radius","fontsize","hypeStart","rightSideStart","font","fillText","DisplayGraph","props","songData","items","popularityX","valenceY","songDictionary","albumSrcDictionary","superSmallFormat","album","images","url","loadedImages","keys","_loop","image","Image","pt","onload","drawImage","key2","fontSize","marginBottom","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","token","no_data","getTopSongs","bind","assertThisInitialized","getAudioFeatures","getPopularity","getSongInfo","body","zoom","setInterval","decrTime","_token","access_token","setState","_this2","$","type","beforeSend","xhr","setRequestHeader","success","data","alert","_this3","genreList","j","artistID","dictionary","concat","_this4","_loop2","audio_features","_this5","_loop3","logo","href","join","Component","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.a709e25c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/testLogo.4791f781.png\";","export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\nexport const clientId = \"3a73a562c583499ea19565fc3ebc4bcc\";\nexport const redirectUri = \"https://plotifyapp.github.io/\";\nexport const scopes = [\n    \"user-top-read\",\n];\n","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;\n","import {useState, useEffect} from \"react\";\n\nexport const getScreenSize = () => {\n    const [windowDimension, detectHW] = useState({\n      winWidth: window.innerWidth,\n      winHeight: window.innerHeight,\n    })\n  \n    const detectSize = () => {\n      detectHW({\n        winWidth: window.innerWidth,\n        winHeight: window.innerHeight,\n      })\n    }\n  \n    useEffect(() => {\n      window.addEventListener('resize', detectSize)\n      return () => {\n        window.removeEventListener('resize', detectSize)\n      }\n    }, [windowDimension])\n  \n    return windowDimension.winWidth;\n}","export function transformCoordinates(x, y, axisLength, imgSize) {\n    const xTransform = (x / 100) * (axisLength - imgSize)\n    const yTransform = (y / 100) * (axisLength - imgSize) \n    return [xTransform, yTransform]\n}\n\nexport function findBounds(popularity, danceability, axisLength, imageSize) {\n    const bounds = {}\n    for (var key in popularity) {\n        if (key in danceability) {\n            const lowX = transformCoordinates(popularity[key], danceability[key], axisLength, imageSize)[0]\n            const highX = transformCoordinates(popularity[key], danceability[key], axisLength, imageSize)[0] + imageSize\n            const lowY = transformCoordinates(popularity[key], danceability[key], axisLength, imageSize)[1]\n            const highY = transformCoordinates(popularity[key], danceability[key], axisLength, imageSize)[1] + imageSize\n            bounds[key] = [lowX, highX, lowY, highY]\n        }\n    }\n    return bounds\n}","import React from \"react\";\nimport \"./genreComponent.css\"\n\nexport function GenreComponent({genres}) {\n\n    return (\n        <div className=\"parent\"> \n            {genres.map(genre => <p key={genre} className=\"genreComponent\"> {genre} </p>)}\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport { findBounds } from \"./helper\";\nimport \"./hoverComponent.css\"\nimport { GenreComponent } from \"./GenreComponent\";\n\nexport function HoverComponent({x, y, imageSize, axisLength, popularity, valence, songInfo, smallFormat, isMobile, setHovered}) {\n    // set bounds for the coordinates\n    const bounds = findBounds(popularity, valence, axisLength, imageSize);\n\n    // return correct component if in bounds \n    var currElem = null; \n    for (var key in bounds) {\n        const lowX = bounds[key][0]\n        const highX = bounds[key][1]\n        const lowY = bounds[key][2]\n        const highY = bounds[key][3]\n        if (x >= lowX && x <= highX && y >= lowY && y <= highY) {\n            currElem = key\n        } \n    }\n\n    // determine height of top 10 elements so showing song info doesn't shift page \n    const [topHeight, setTopHeight] = useState(100); \n    const elem = document.getElementById('test');\n    if (elem !== null && topHeight != elem.clientHeight) {\n        setTopHeight(elem.clientHeight)\n    }\n\n    function determineElement() {\n        if (currElem != null && currElem in songInfo) {\n            const name = songInfo[currElem].track \n            if (!isMobile) {\n                setHovered(name)\n            }\n            const artists = songInfo[currElem].artists\n            let artistString = \"\" \n            for (var i = 0; i < artists.length; i++) {\n                if (i === 0) {\n                    artistString = artistString + artists[i].name\n                } else {\n                    artistString = artistString + \", \" + artists[i].name\n                }\n            }\n            const genres = songInfo[currElem].genres\n            let className = \"songInfo\"\n            if (smallFormat) {\n                className = \"smallSongInfo\"\n            }\n            if (isMobile) {\n                className = \"mobile\"\n            }\n\n            return (\n                <div className=\"container\"> \n                    <div className={className}>\n                        <div style={{display: \"flex\", overflow: \"hidden\"}}> \n                            {isMobile ? <img src={songInfo[currElem].src} alt=\"image of album cover\" className=\"songCover\"/> : null}\n                            <div> \n                                <p className=\"name\"> \n                                    <strong> {name} </strong>\n                                </p>\n                                <p className=\"artist\"> \n                                    {artistString}\n                                </p>\n                                <GenreComponent genres={genres}/>\n                            </div>\n                        </div> \n                    </div>\n                </div> \n            )\n        } else {\n            if (isMobile) {\n                let songsFirstHalf = []; \n                let songsSecondHalf = []; \n                var count = 1; \n                for (var song in songInfo) {\n                    if (count < 6) {\n                        songsFirstHalf.push(songInfo[song].track)\n                    } else {\n                        songsSecondHalf.push(songInfo[song].track)\n                    }\n                    count++;\n                }\n                \n                if (songsFirstHalf.length <= 0 || songsSecondHalf.length <= 0) {\n                    return (\n                        <div> \n                            <h2 className=\"loading\"> Loading Your Songs...</h2>\n                            <p className=\"loadingTime\">If this process takes > 2 minutes, please refresh or try again later. </p>\n                        </div>\n                    )\n                }\n                return (\n                    <div id=\"test\" className=\"topzz\"> \n                        <h2 className=\"top10\"> Your Top 10 </h2>\n                        <p className=\"learnMore\">Tap on a song for more info</p>\n                        <div className=\"list\"> \n                            <div className=\"left\" > \n                                {songsFirstHalf.map(song => \n                                    <p key={song}> {song} </p>\n                                )}\n                            </div> \n                            <div className=\"right\"> \n                                {songsSecondHalf.map(song => \n                                    <p key={song}> {song} </p>\n                                )}\n                            </div> \n                        </div>\n                    </div>   \n                )\n            } else {\n                setHovered(\"\")\n                return null\n            }\n        }\n    }\n\n    return (\n        <div style={{height: topHeight + 20}}>\n            {determineElement()}\n        </div> \n    )\n    \n}","import React from \"react\";\nimport \"./computerTop.css\"\n\nexport function ComputerTop({songInfo, hoveredSong}) {\n    let songs = []; \n    for (var song in songInfo) {\n        if (hoveredSong === songInfo[song].track) {\n            songs.push(<li key={song} style={{color: \"#1DB954\", marginLeft: -12.5 }}><span style={{marginLeft: -6.5}}> {songInfo[song].track} </span></li>)\n        } else {\n            songs.push(<li key={song} style={{color: \"white\", listStyleType: \"none\"}}> {songInfo[song].track} </li>)\n        }\n    }\n\n    return (\n        <div className=\"margins\"> \n            <div className=\"top\"> \n                <h2 className=\"header\"> {songs.length <= 0 ? \"Loading...\" : \"Your Top 10\"}</h2>\n                <p className=\"moreInfo\"> {songs.length <= 0 ? \"If this process takes > 2 minutes, please refresh or try again later.\" : \n                        \"Hover over a song for more info\"}</p>\n                <div className=\"songs\"> \n                    {songs.map(song => <div> {song} </div>)}\n                </div> \n            </div> \n        </div> \n    )\n}","import React, {useState, useRef} from \"react\";\nimport \"./Canvas.css\"\nimport { useMousePosition } from \"./useMousePosition\";\nimport MouseTooltip from 'react-sticky-mouse-tooltip';\nimport { HoverComponent } from \"./HoverComponent\";\nimport {isMobile} from 'react-device-detect';\nimport { ComputerTop } from \"./ComputerTop\";\nimport { getScreenSize } from \"./getScreenSize\";\n\nexport function Canvas ({ draw, height, width, imageSize, popularity, valence, songInfo, smallFormat }) {\n    \n    const screenSize = getScreenSize();\n\n    const position = useMousePosition()\n    const canvas = React.useRef();\n\n    const xRect = useRef(0);\n    const yRect = useRef(0);\n    \n    React.useEffect(() => {\n        var rect = canvas.current.getBoundingClientRect();\n        const context = canvas.current.getContext(\"2d\");\n        canvas.current.width = width * devicePixelRatio;\n        canvas.current.height = height * devicePixelRatio;\n        // ensure all drawing operations are scaled\n        context.scale(devicePixelRatio, devicePixelRatio);\n        // scale everything down using CSS\n        canvas.current.style.width = width + 'px';\n        canvas.current.style.height = height + 'px';\n        // may want to make it s.t. if screen size changes --> refresh app \n\n        context.beginPath();\n        var grd = context.createLinearGradient(0, 0, 0, height);\n        grd.addColorStop(0, \"darkturquoise\");\n        grd.addColorStop(1, \"greenyellow\");\n        context.strokeStyle = grd;\n        context.lineWidth = 1.5; \n        context.moveTo(width/(2), 0);\n        context.lineTo(width/(2), (width));\n        context.stroke();\n\n        context.beginPath();\n        grd = context.createLinearGradient(0, 0, width, 0);\n        grd.addColorStop(0, \"yellow\");\n        grd.addColorStop(1, \"magenta\");\n        context.strokeStyle = grd;\n        context.moveTo(0, (width)/(2));\n        context.lineTo((width), (width)/(2));\n        context.stroke();\n\n        context.beginPath(); \n        context.fillStyle = \"yellow\"\n        context.arc(5, width/2, 5, 0 * Math.PI, 2 * Math.PI);\n        context.fill();\n\n        context.beginPath(); \n        context.fillStyle = \"magenta\"\n        context.arc(width - 5, width/2, 5, 0 * Math.PI, 2 * Math.PI);\n        context.fill();\n\n        context.beginPath(); \n        context.fillStyle = \"darkturquoise\"\n        context.arc(width/2, 5, 5, 0 * Math.PI, 2 * Math.PI);\n        context.fill();\n\n        context.beginPath(); \n        context.fillStyle = \"greenyellow\"\n        context.arc(width/2, width - 5, 5, 0 * Math.PI, 2 * Math.PI);\n        context.fill();\n\n        draw(context);\n        xRect.current = rect.x;\n        yRect.current = rect.y;\n    });\n\n    let xOffset; \n    if (position.x - xRect.current >= width/2 && smallFormat) {\n        xOffset = -100\n    } else {\n        xOffset = 0;\n    }\n\n    const[hovered, setHovered] = useState(\"\")\n\n    if (isMobile || screenSize < 900) {\n        return (\n            <div> \n                <canvas className=\"canvas\" ref={canvas} height={height} width={width}/>\n                <HoverComponent x={position.x - xRect.current} \n                                y={position.y - yRect.current} \n                                imageSize={imageSize} \n                                axisLength={width}\n                                popularity={popularity}\n                                valence={valence}\n                                songInfo={songInfo}\n                                smallFormat={smallFormat}\n                                isMobile={true}\n                                />\n            </div>\n        )\n    } else {\n        return (\n            <div style={{display: \"flex\"}}> \n                <canvas className=\"canvas\" ref={canvas} height={height} width={width}/>\n                <MouseTooltip\n                className=\"test\"\n                visible={true}\n                offsetX={xOffset}\n                offsetY={0}\n                >\n                <HoverComponent x={position.x - xRect.current} \n                                y={position.y - yRect.current} \n                                imageSize={imageSize} \n                                axisLength={width}\n                                popularity={popularity}\n                                valence={valence}\n                                songInfo={songInfo}\n                                smallFormat={smallFormat}\n                                isMobile={false}\n                                setHovered={setHovered}\n                                />\n                </MouseTooltip>\n                <ComputerTop songInfo={songInfo} hoveredSong={hovered}/>\n            </div>\n        )\n    }\n};\n\nexport const MemorizedCanvas = React.memo(Canvas, () => {\n    return false\n})","import { useEffect, useState } from \"react\";\nimport {isMobile} from 'react-device-detect';\n\nexport function useMousePosition() {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  if(isMobile) {\n    useEffect(() => {\n      const setFromEvent = (e) => {\n        e.stopPropagation();\n        setPosition({ x: e.touches[0].clientX, y: e.touches[0].clientY });\n      }\n      window.addEventListener(\"touchstart\", setFromEvent);\n  \n      return () => {\n        window.removeEventListener(\"touchstart\", setFromEvent);\n      };\n    }, []);\n  } else {\n    useEffect(() => {\n      const setFromEvent = (e) => setPosition({ x: e.clientX, y: e.clientY });\n      window.addEventListener(\"mousemove\", setFromEvent);\n  \n      return () => {\n        window.removeEventListener(\"mousemove\", setFromEvent);\n      };\n    }, []);\n  }\n  \n  return position;\n};","import React from \"react\";\n\nexport function KeyCanvas ({ height, width, smallFormat }) {\n    \n    const canvas = React.useRef();\n    \n    React.useEffect(() => {\n        const context = canvas.current.getContext(\"2d\");\n        canvas.current.width = width * devicePixelRatio;\n        canvas.current.height = height * devicePixelRatio;\n        // ensure all drawing operations are scaled\n        context.scale(devicePixelRatio, devicePixelRatio);\n        // scale everything down using CSS\n        canvas.current.style.width = width + 'px';\n        canvas.current.style.height = height + 'px';\n        // may want to make it s.t. if screen size changes --> refresh app \n\n        let lineStartX = 88; \n        let lineEndX = 113; \n        let radius = 5; \n        let fontsize = \"14px\"\n        let hypeStart = 12; \n        let rightSideStart = 125; \n\n        if (smallFormat) {\n            fontsize = \"12px\"\n            radius = 4;\n            lineStartX = 75;\n            lineEndX = 95; \n            hypeStart = 11;\n            rightSideStart = 104;\n        }\n        context.beginPath();\n        var grd = context.createLinearGradient(lineStartX, 35, lineEndX - 10, 35);\n        grd.addColorStop(0, \"darkturquoise\");\n        grd.addColorStop(1, \"greenyellow\");\n        context.strokeStyle = grd;\n        context.lineWidth = 1.5; \n        context.moveTo(lineStartX, 35);\n        context.lineTo(lineEndX, 35);\n        context.stroke();\n\n        context.beginPath();\n        grd = context.createLinearGradient(lineStartX, 15, lineEndX, 15);\n        grd.addColorStop(0, \"yellow\");\n        grd.addColorStop(1, \"magenta\");\n        context.strokeStyle = grd;\n        context.moveTo(lineStartX, 15);\n        context.lineTo(lineEndX, 15);\n        context.stroke();\n\n        context.beginPath(); \n        context.fillStyle = \"yellow\"\n        context.arc(lineStartX - radius, 15, radius, 0 * Math.PI, 2 * Math.PI);\n        context.fill();\n\n        context.beginPath(); \n        context.fillStyle = \"magenta\"\n        context.arc(lineEndX - radius, 15, radius, 0 * Math.PI, 2 * Math.PI);\n        context.fill();\n\n        context.beginPath(); \n        context.fillStyle = \"darkturquoise\"\n        context.arc(lineStartX - radius, 35, radius, 0 * Math.PI, 2 * Math.PI);\n        context.fill();\n\n        context.beginPath(); \n        context.fillStyle = \"greenyellow\"\n        context.arc(lineEndX - radius, 35, radius, 0 * Math.PI, 2 * Math.PI);\n        context.fill();\n\n        context.fillStyle = \"grey\";\n        context.font = fontsize + \" Helvetica\";\n        context.fillText(\"underrated\", 0, 18);\n\n        context.fillStyle = \"grey\";\n        context.font = fontsize + \" Helvetica\";\n        context.fillText(\"happy :))\", hypeStart, 38);\n\n        context.fillStyle = \"grey\";\n        context.font = fontsize + \" Helvetica\";\n        context.fillText(\"basic\", rightSideStart, 18);\n\n        context.fillStyle = \"grey\";\n        context.font = fontsize + \" Helvetica\";\n        context.fillText(\"sad :(\", rightSideStart, 38);\n    });\n\n    return (\n        <div> \n            <canvas className=\"keyCanvas\" ref={canvas} height={height} width={width} />\n        </div>\n    )\n};\n","import React from \"react\";\nimport \"./Canvas.css\"\nimport { getScreenSize } from \"./getScreenSize\";\nimport { MemorizedCanvas } from \"./Canvas\";\nimport { transformCoordinates } from \"./helper\";\nimport { KeyCanvas } from \"./KeyCanvas\";\n\nexport function DisplayGraph(props) {\n    const songData = props.items;\n    const popularityX = props.popularity;\n    const valenceY = props.valence;\n    const songDictionary = props.songDictionary;\n    // keys are song ids, values are src links\n    const albumSrcDictionary = {};\n\n    // determine dimensions \n    const width = getScreenSize();\n    let imgSize; \n    let axisLength; \n    let smallFormat = false; \n    let superSmallFormat = false; \n    if (width > 900) {\n      imgSize = 0.038 * width; \n      axisLength = 0.4 * width;\n    } else {\n      imgSize = 0.1 * width; \n      axisLength = 0.77 * width;\n      smallFormat = true;\n    }\n\n    if (width < 400) {\n      superSmallFormat = true;\n    }\n\n    // get tracks + album covers \n    if (songData !== null) {\n      for (var i = 0; i < songData.length; i++) {\n        albumSrcDictionary[songData[i].id] = songData[i].album.images[0].url;\n      }  \n    } \n\n    const loadedImages = {}\n    // load images on graph w/o glitching (hopefully)\n    function draw (context){\n      if (Object.keys(loadedImages).length <= 0) {\n        for (var key in albumSrcDictionary) {\n          const image = new Image();\n          image.src = albumSrcDictionary[key];\n          const pt = transformCoordinates(popularityX[key], valenceY[key], axisLength, imgSize)\n          image.onload = () => {\n            context.drawImage(image, pt[0], pt[1], imgSize, imgSize);\n          };\n          loadedImages[key]= image\n        }\n      } else {\n        for (var key2 in loadedImages) {\n          const pt = transformCoordinates(popularityX[key2], valenceY[key2], axisLength, imgSize)\n          context.drawImage(loadedImages[key2], pt[0], pt[1], imgSize, imgSize);\n        }\n      }   \n    };\n\n    // display stuff\n    if (albumSrcDictionary.length < 10) {\n        return (\n            <p className=\"sorry\"> Loading...</p>\n        )\n    } else if (width <300) {\n      return (\n        <p className=\"sorry\"> \n          We're sorry, your display is too small to properly view the data. Please switch to a device with a larger screen size.\n        </p>\n      )\n    } else {\n      return (\n        <div>\n          <div className=\"heading\">\n            <h2 className=\"header\" style={{fontSize: \"2.25em\", marginBottom: 0}}> Where Your Music Falls </h2> \n            <div className=\"key\"> \n              <KeyCanvas height={50} width={axisLength} smallFormat={superSmallFormat}/> \n            </div> \n          </div> \n          \n          {smallFormat ? \n            <div className=\"smallerCanvas\" > \n              <MemorizedCanvas draw={draw} \n                              height={axisLength} \n                              width={axisLength} \n                              imageSize={imgSize} \n                              popularity={popularityX} \n                              valence={valenceY}\n                              songInfo={songDictionary}\n                              smallFormat={smallFormat}/>\n            </div> : \n            <div className=\"bigCanvas\" > \n              <MemorizedCanvas draw={draw} \n                              height={axisLength} \n                              width={axisLength} \n                              imageSize={imgSize} \n                              popularity={popularityX} \n                              valence={valenceY}\n                              songInfo={songDictionary}\n                              smallFormat={smallFormat}/>\n          </div>}\n          \n        </div>   \n      )   \n    } \n  }","import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport {DisplayGraph} from \"./DisplayGraph\";\nimport \"./App.css\";\nimport logo from \"./testLogo.png\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      items: null,\n      no_data: false,\n      valence: {}, \n      popularity: {},\n      songDictionary: {}, \n    };\n    this.getTopSongs = this.getTopSongs.bind(this)    \n    this.getAudioFeatures = this.getAudioFeatures.bind(this)\n    this.getPopularity = this.getPopularity.bind(this)\n    this.getSongInfo = this.getSongInfo.bind(this)\n  }\n\n  componentDidMount() {      \n    document.body.style.zoom = \"100%\";\n    setInterval(this.decrTime, 1000);\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      // this.getCurrentlyPlaying(_token);\n      this.getTopSongs(_token);\n    }\n  }\n\n  getTopSongs(token) {\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/top/tracks?limit=10&time_range=long_term\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if(!data) {\n          window.alert(\"NOOOOO we couldn't get your top songs :((\");\n          return;\n        }\n        this.setState({\n          items: data.items,\n          no_data: false /* We need to \"reset\" the boolean, in case the\n                            user does not give F5 and has opened his Spotify. */\n        });\n        this.getAudioFeatures(token)\n        this.getPopularity(token)\n        this.getSongInfo(token)\n      }\n    });\n  }\n\n  getSongInfo(token) {\n    for (var i = 0; i < this.state.items.length; i++) {\n      const id = this.state.items[i].id\n      this.setState({\n        genreList: []\n      })\n      const track = this.state.items[i].name; \n      const artists = this.state.items[i].artists;\n      const src = this.state.items[i].album.images[0].url\n      for (var j = 0; j < artists.length; j++) {\n        const artistID = artists[j].id\n        $.ajax({\n          url: \"https://api.spotify.com/v1/artists/\" + artistID,\n          type: \"GET\",\n          beforeSend: xhr => {\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n          },\n          success: data => {\n            // Checks if the data is not empty\n            if(!data) {\n              window.alert(\"NOOOOO we couldn't get your top songs :((\");\n              return;\n            }\n            const dictionary = this.state.songDictionary;\n            if (id in dictionary) {\n              dictionary[id] = {\n                track: track, \n                artists: artists, \n                genres: (dictionary[id].genres).concat(data.genres),\n                src: src, \n              }\n            } else {\n              dictionary[id] = {\n                track: track, \n                artists: artists, \n                genres: data.genres, \n                src: src, \n              }\n            }\n            this.setState({\n              songDictionary: dictionary, \n            })\n          }\n        });\n      }\n    }\n  }\n\n  getAudioFeatures(token) {\n    for (var i = 0; i < this.state.items.length; i++) {\n      const id = this.state.items[i].id\n      $.ajax({\n        url: \"https://api.spotify.com/v1/audio-features?ids=\" + id,\n        type: \"GET\",\n        beforeSend: xhr => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: data => {\n          // Checks if the data is not empty\n          if(!data) {\n            window.alert(\"NOOOOO we couldn't get your top songs :((\")\n            return;\n          }\n          const dictionary = this.state.valence;\n          dictionary[id] = [100 - data.audio_features[0].valence * 100];  \n          this.setState({\n            valence: dictionary, \n          })\n        }\n      });\n    }\n  }\n\n  getPopularity(token) {\n    for (var i = 0; i < this.state.items.length; i++) {\n      const id = this.state.items[i].id\n      $.ajax({\n        url: \"https://api.spotify.com/v1/tracks/\" + id,\n        type: \"GET\",\n        beforeSend: xhr => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        },\n        success: data => {\n          // Checks if the data is not empty\n          if(!data) {\n            window.alert(\"NOOOOO we couldn't get your top songs :((\")\n            return;\n          }\n          const dictionary = this.state.popularity;\n          dictionary[id] = [data.popularity];  \n          this.setState({\n            popularity: dictionary, \n          })\n        }\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <div className=\"intro\">\n            {!this.state.token && (\n              <div className=\"main\"> \n                <h1 className=\"title\"> plotify </h1>\n                <img className=\"logo\" src={logo} alt=\"logo\"/> \n                <h1 className=\"divider\"> </h1>\n                <a\n                  className=\"btn btn--loginApp-link\"\n                  href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                    \"%20\"\n                  )}&response_type=token&show_dialog=true`}\n                >\n                  Log in with Spotify\n                </a>\n                <p className=\"hi\"> made with &#60;3 by Kaily Liu and Joyce He </p>\n              </div> \n            )}\n          </div> \n          <div className=\"mainStuff\">\n            {this.state.token && !this.state.no_data && (\n              <div> \n                <DisplayGraph items={this.state.items} \n                            popularity={this.state.popularity} \n                            valence={this.state.valence} \n                            songDictionary={this.state.songDictionary}/> \n              </div>\n            )}\n            {this.state.no_data && (\n              <p>\n                NOOO it doesn't seem like we were able to retrieve your data :(\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}